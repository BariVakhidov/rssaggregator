{
    "swagger": "2.0",
    "info": {
        "description": "This is a RSS Aggregator server. API",
        "title": "RSS Aggregator API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "rssaggregator.swagger.io",
    "basePath": "/v1",
    "paths": {
        "/feed_follows": {
            "post": {
                "description": "Add a new RSS feed follow to the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Create a new feed follow",
                "parameters": [
                    {
                        "description": "Feed Request Body",
                        "name": "feed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FeedFollowInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FeedFollow"
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation errors",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            }
        },
        "/feed_follows/{feedFollowID}": {
            "delete": {
                "description": "Unfollow a feed for the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Delete a feed follow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed Follow ID",
                        "name": "feedFollowID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully unfollowed the feed"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            }
        },
        "/feeds": {
            "get": {
                "description": "Retrieve a list of all feeds.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Get all feeds",
                "responses": {
                    "200": {
                        "description": "List of feeds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Feed"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new RSS feed to the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Create a new feed",
                "parameters": [
                    {
                        "description": "Feed Request Body",
                        "name": "feed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FeedInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Feed"
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation errors",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Retrieve user posts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Get user posts",
                "responses": {
                    "200": {
                        "description": "List of posts of followed feeds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Post"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve user information by user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID from auth_token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new user with credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            }
        },
        "/uses/login": {
            "post": {
                "description": "Login user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/model.APIErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIErr": {
            "type": "object",
            "properties": {
                "msg": {},
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "model.Feed": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.FeedFollow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "feed_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.FeedFollowInfo": {
            "type": "object",
            "properties": {
                "feed_id": {
                    "type": "string"
                }
            }
        },
        "model.FeedInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Post": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "feed_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}