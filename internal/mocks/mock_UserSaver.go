// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/BariVakhidov/rssaggregator/internal/model"

	uuid "github.com/google/uuid"
)

// MockUserSaver is an autogenerated mock type for the UserSaver type
type MockUserSaver struct {
	mock.Mock
}

type MockUserSaver_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUserSaver) EXPECT() *MockUserSaver_Expecter {
	return &MockUserSaver_Expecter{mock: &_m.Mock}
}

// CreateUser provides a mock function with given fields: ctx, userID, email
func (_m *MockUserSaver) CreateUser(ctx context.Context, userID uuid.UUID, email string) (model.User, error) {
	ret := _m.Called(ctx, userID, email)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 model.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, string) (model.User, error)); ok {
		return rf(ctx, userID, email)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, string) model.User); ok {
		r0 = rf(ctx, userID, email)
	} else {
		r0 = ret.Get(0).(model.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID, string) error); ok {
		r1 = rf(ctx, userID, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockUserSaver_CreateUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateUser'
type MockUserSaver_CreateUser_Call struct {
	*mock.Call
}

// CreateUser is a helper method to define mock.On call
//   - ctx context.Context
//   - userID uuid.UUID
//   - email string
func (_e *MockUserSaver_Expecter) CreateUser(ctx interface{}, userID interface{}, email interface{}) *MockUserSaver_CreateUser_Call {
	return &MockUserSaver_CreateUser_Call{Call: _e.mock.On("CreateUser", ctx, userID, email)}
}

func (_c *MockUserSaver_CreateUser_Call) Run(run func(ctx context.Context, userID uuid.UUID, email string)) *MockUserSaver_CreateUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uuid.UUID), args[2].(string))
	})
	return _c
}

func (_c *MockUserSaver_CreateUser_Call) Return(_a0 model.User, _a1 error) *MockUserSaver_CreateUser_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockUserSaver_CreateUser_Call) RunAndReturn(run func(context.Context, uuid.UUID, string) (model.User, error)) *MockUserSaver_CreateUser_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUserSaver creates a new instance of MockUserSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUserSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUserSaver {
	mock := &MockUserSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
